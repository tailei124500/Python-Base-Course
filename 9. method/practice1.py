# 三門問題
#   --> 三道門(由左至右為1到3號)裡面只有一個大獎，當決定了一道門(假設選了2號門)以後，主持人會突然喊暫停，
#   --> 並且打開另外兩道門(1和3)，並告知3號門內並沒有獎品，那麼是要堅持選擇(選2號門)? 還是改選1號門?
#   --> 結論是改選1號門，因為改選的機率是2/3，而堅持選擇的機率是1/3。
# 解析: 
#   --> 最後選擇完門後，有拿到大獎，代表第一個選擇選了沒大獎的門(機率為: 2/3)
#   --> 最後選擇完門後，沒拿到大獎，代表第一個選擇選了有大獎的門(機率為: 1/3)

# 四門問題(a、b、c、d): 假設在所有狀況下皆會同意主持人的選擇進行選門的更換 
# 選擇1: a -> 大獎(1/4)，代表會輸，因為無論如何都會進行選門的更換(中獎機率較高)
#        b -> 無獎(3/4)
#           --> 選擇2: c -> 大獎(1/2)，贏!
#                      d -> 無獎(1/2)，輸慘!
# 贏的機率: 3/4(無) x 1/2(獎) = 37.5%
# 輸的機率: 1/4(獎) x 3/4(無) X 1/2(無) = 62.5%

# N門問題: 贏的機率 =  (N-1)/N  x  1/(N-2)
#                    第一輪選無   第二輪選中
# 輸的機率 = 1 - 贏的機率

# N門問題機率計算的步驟
import random

total = 1000000  # 總共模擬的次數
win, lose = 0, 0  # 初始化贏和輸的計數器
n = 3 # 門的數量

for i in range(total): # 每次模擬都要重新設定門的數量
    # 1. 設定門的數量N，[0和1]，0表示無獎，1表示有獎
    doors = [0] * (n - 1)
    idx = random.randint(0, len(doors) - 1)
    # print("初始狀態，此時的idx = ", idx, "，表示有獎的門被隨機安插在第", idx + 1, "號門")

    # insert(插入位置, 插入值)
    doors.insert(idx, 1)
    # print("1. 準備的門: ", doors)

    # 2. 隨機選擇一個門(random) (但非我們的選擇，我們要選擇的是機率高的選項，也就是接受換門)
    idx = random.randint(0, len(doors) - 1)
    # print("2. 選到的門: ", doors[idx])
    # print("選到的門為第", idx + 1, "號門，並且下一步被pop()函式給刪除")

    # pop(idx): 刪除idx，pop(): 刪除最後一個元素
    doors.pop(idx)
    # print("剩下的門: ", doors)
    # print("下一步主持人會開一個沒有獎的門，程式中使用remove(0)來移除最左邊沒獎的門")

    # 3. 在剩下的門裡面，主持人開一個沒有獎的門 (但非我們的選擇，我們要選擇的是機率高的選項，也就是接受換門)
    # remove(value): 從左到右找到第一個吻合的value並刪除
    doors.remove(0)
    # print("3. 剩下的門(主持人刪除無獎門後): ", doors)

    # 4. 扣除上述兩個項目，再選一個
    idx = random.randint(0, len(doors) - 1)
    if doors[idx] == 1:
        # print("4. 最後選擇的門: ", doors[idx], "，恭喜你中獎!")
        win += 1
    else:
        # print("4. 最後選擇的門: ", doors[idx], "，很遺憾，你沒有中獎!")
        lose += 1

ratio = win / total
print("總共模擬了", total, "次，贏的機率為: ", ratio)
# for迴圈內的Print皆為檢察程式過程中的每一步運算結果是否正確，
#   --> 若沒有用註解消除，會導致模擬時每次都執行print，造成輸出結果過多而無法觀察最終結果，

# 多行輸入: 按住"Alt"鍵並用滑鼠點擊輸入處即可