# 課程筆記
# 1. 寫程式可以比喻為把腦內的想法轉換成Python語言，第一步就是要先想好。
# 2. 剪刀石頭布程式，一般想法會事先判斷輸贏，但如果要列出全部輸贏與平手的型態來寫程式，
#   --> 程式會變得很複雜，以剪刀石頭布來說，就會有3 * 3 = 9種case，才能夠完整處理所有情況，
#   --> 如果程式要擴充到四種、五種甚至更多組合與複雜規則的遊戲，程式就會變得更複雜。
#   --> 但如果我們能夠用一個簡單的邏輯來處理所有情況，程式就會變得簡潔許多。
# 3. 正確的想法只需要看3種case即可，輸、贏與平手，例如棒打老虎雞吃蟲為四種拳的遊戲，
#   --> 以棒子為例，棒子只有對到老虎與蟲才會有輸贏的結果，其他皆為平手，也就是說棒子只會與前後項目有輸贏關聯。
#   --> 假設有五種拳的遊戲以編號表示，只有1對2、1對5會有輸贏結果，其他皆為平手。
# 4. 剪刀石頭布程式一般會想到使用字串型態來編寫，但會有兩個問題: 
#   --> 1. 字串型態很難表示上下一個拳種。
#   --> 2. 使用者輸入字串較易出現輸入錯誤。
# 5. 改使用整數型態來編寫: 
#   --> 1. 表示上下關係更加容易。
#   --> 2. 使用者輸入整數較不易出現錯誤。
# 6. 數數永遠要從0開始。
# 7. 若程式有隱含的大小關係，絕對不要用字串，而是用整數型態來表示。
# 8. import語法為最常使用的語法，不管是使用自己寫的/內建的/第三方的Module，都必須使用import。
#   --> 使用方法: Step1. import (.py檔案的檔名)
#   --> Step2. (.py檔案的檔名).需要使用的功能
#   --> Step2.中的"."為"的"的意思，意為使用該.py檔案內的功能。
# 9. print("我出拳: " + str(my))與print("我出拳: ", my)的差異:
#   --> 前者會將整數轉換為字串後再進行字串拼接，後者則是直接輸出整數。
#   --> 假設"my"的值輸入為0，前者的輸出內容為"我出拳: 0"，但後者的輸出內容為"我出拳:  0"（0前面有兩個空格）。
# 10. List型態: 清單型態的值創造在[]中括號內，值之間用逗號分隔，且清單形態中若有多個值，Python會自動給予編號，從0開始。
#   --> 這種編號與值的對應稱為(key-value)對應，若型態具有key-value對應，就一定支援『查詢操作』。
#   --> 例如: trans = ["剪刀", "石頭", "布"]，trans[0]會得到"剪刀"。
# 11. if(如果) - elif(否則如果) - else(否則)語法:
#   --> if bmi > 25:
#   -->     print("過重")
#   --> elif 25 >= bmi > 18:
#   -->     print("正常")
#   --> else:
#   -->     print("過輕")
#   --> 以上語法OK，但缺點為很容易寫錯，">="寫成">"會導致if函式錯誤。
#   --> 改寫成: 
#   --> if bmi > 25:
#   -->     print("過重")
#   --> elif bmi > 18:
#   -->     print("正常")
#   --> else:
#   -->     print("過輕")
#   --> 假設輸入數字為36，因if函式是由上向下篩選，程式會判斷if這層成立，就不會再往elif或else走，
#   --> 也不會導致程式重複判斷到if與elif的情況。
# 12. 在if函式中，else可以省略，代表不做任何事。
# 13. 簡單的case先處理，剩下難的case放到最後的else，像是剪刀石頭布類型遊戲的平手，因為有可能多種case都是平手。
# 14. 取餘數語法(可比喻為輪迴):
#   --> 7/3 = 2...1，7除以3的商為2，餘數為1。
#   --> 語法1. 取商7 // 3 -> 2
#   --> 語法2. 取餘7 % 3 -> 1，其中"%"念作mod。
#   --> 例如:  0 % 3 = 0, 1 % 3 = 1, 2 % 3 = 2, 3 % 3 = 0。
#   --> 公式: 想保持0,1,...,n的輪迴，就對 n + 1 取餘數。

# title: Rock Paper Scissors Game
import random

my = int(input("請輸入 0.剪刀 1.石頭 2.布: "))
com = random.randint(0, 2)
trans = ["剪刀", "石頭", "布"]
print("我出拳: ", trans[my])
print("電腦出拳: ", trans[com])
# print("我出拳: ", my)
# print("電腦出拳: ", com)

if my == (com + 1) % 3: # 因要控制0,1,2的輪迴，套用公式就為n+1=3取餘數。
    print("我贏了")
elif com == (my + 1) % 3:
    print("電腦贏了")
else:
    print("平手")