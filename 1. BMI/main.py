# 課程筆記
# 1. "#"符號用於註解，多行註解可使用"""或'''包覆
# 2. 程式注重可讀性，而不是執行速度
# 3. "refactor/refactoring"意思為重整，e.g. 整理堆積已久的大量程式碼並給予註解
# 4. 不要重複定義一個數字
# 5. 數學算式中的等號在程式中為"=="，e.g. 5 = 3 + 2，在程式內要寫成"5 == 3 + 2"。
# 6. 程式內的等號"="用於賦值，e.g. a = 5，這表示將5賦值給變數a。
# 7. 因電腦使用二進位，當使用float(浮點數)來進行十進位運算會出現微小誤差。
# 8. 如需精確十進位運算可使用"decimal"。
# 9. Python對Type相當嚴格，加減乘除要同Type才能夠執行
#   --> e.g. weight = 67, print("你的體重是:" + weight)，執行會發生錯誤。
#   --> 但有些語言(C ro Java)可以正常執行，因為對weight進行了隱式轉換(implicit conversion)。
# 10. Python中沒有隱式轉換，必須顯式轉換(Explicit conversion)
#   --> e.g. int(參數):轉整數，int("4")為將字串"4"轉換為整數4、int(4.6)為將浮點數4.6無條件轉換(非四捨五入)為整數4、
#   --> int("4.2")會發生錯誤，因為字串"4.2"無法直接轉換為整數。
#   --> float(參數):轉浮點數，float("4.2")為將字串"4.2"轉換為浮點數4.2、float(4)為將整數4轉換為浮點數4.0。
#   --> str(參數):轉字串，任何東西都可以轉字串。
# 11. input()函式會將輸入的內容轉為字串；input(prompt)可以在輸入前顯示提示訊息。
# 12. VS Code下方的終端機中如果要開啟一個互動式Python環境(REPL)，直接在終端機輸入"python"即可，如要離開輸入"exit()"。
# 13. weight = input("請輸入你的體重: " + weight)會發生錯誤，input()函式會將輸入的內容轉為字串，
#   --> 原先的"weight = 67"是數字類型，兩者型態不同無法直接相加。
#   --> 正確寫法為weight = float(input("請輸入你的體重: "))，input()函式收到使用者Kei in的字串回傳值，
#   --> float()函式再將輸入的字串轉為浮點數類型，即可在bmi算式內進行運算。
# 14. 確認程式內的函式是否需要額外帶入內容，需要的話就放在()內。
# 15. 確認回傳值的型態，型態如果不符合預期就需要型態轉換。
# 16. Python語言中有強制縮排，若縮排不恰當，程式結果可能會不符合預期。

# title:BMI calculator
# BMI:weight(kg) / height(m) ^ 2
# "**"符號用於次方運算，e.g. 2**2 = 4。
weight = float(input("請輸入你的體重: "))
hight = float(input("請輸入你的身高: "))
bmi = weight / (hight / 100) ** 2
print("你的體重是: " + str(weight))
print("你的身高是: " + str(hight))
print("BMI是: " + str(bmi))

# > (大於), >=(大於等於), <(小於), <=(小於等於), ==(等於), !=(不等於)
if bmi > 25:
    print("你超重了")
    print("請注意飲食，並增加運動量")

else:
    print("你沒有超重")
    print("繼續保持健康的生活方式")